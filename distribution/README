general statistical distribution library
written by Ryo Fujii

まだ書きかけのメモ

狙い
Salviさんの設計を生かしつつ、わざわざ「分布」オブジェクトを作るメリットを最大限生かすためのギミックを付け加えた
換言すれば、計算の途中経過から統計量まで、パラメータが決定される瞬間に決まる値はすべて事前に計算される
これにより、インターフェイスの大量の呼び出しに対して効率的に値を返すことが出来る

他方、各メソッドは低レベルAPIを持ち、1回だけの呼び出しに対してはわざわざオブジェクトを生成しなくても使えるようにしなければならない
この点はまだ未完成であり、現時点では乱数のみが低層APIを持つ
（乱数と統計量以外はSalviからのimportであり、精度／性能チェックも行われていない）



tips
setf-ableな分布のスロットに対してsetfを行うと、直ちにすべての値が再計算される
故に、同時に複数のスロットを更新したい場合、setfをコールすると余計な計算を行う
これを避けるためには、slot-valueやset-<slot名>で直接スロットを書き換えたあとで、再計算メソッドupdate-distributionを呼ぶ



TODO:
全分布の全メソッドが正確かどうかを検定する
現状、乱数は正確であることが保証できているので、そこをテコにするといいと思う
具体的には、distribution.lispの末尾に
unit-test-distribution
という適当関数があるので、これを用いることで目の子でテスト可能である
定義されている全統計量が正しそうであれば、統計量メソッドは正確であると（逆向きに）検定できる

確率密度やquantileを書き直す

全メソッドに対して低レベルなAPIを整備する
　というか、それぞれ別ファイルに移す


将来的な野望
このライブラリの上にMCMCライブラリを構築する？