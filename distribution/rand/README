参考文献: 計算機シミュレーションのための確率分布乱数生成法, 四辻哲章, プレアデス出版, 2010

すべての手法は実装していないのであしからず
時間をみつけて少しずつ育てていく予定

各分布について、複数の乱数生成法がある場合、別の関数をそれぞれ書いた上で、
*Allegro Common Lisp 8.2(x86-64)*
上でもっとも速かった手法を使うラッパ（関数＆コンパイラマクロ）を定義している

どの手法が最速か、というのは、高価な数学関数（三角関数・log・sqrt等）の速度に依存する
複雑な方法で高価な関数を排除した結果、どれが速くなるかはトレードオフの度合いで変わるということ
処理系が異なれば最速は変わる可能性がある


Tips

*-cached系関数
パラメタを持つ分布の中で、「前もって」パラメタから計算すべき値を持つ関数がある
実用では、多くの場合同じパラメタからたくさんの乱数を生成したい
したがって、パラメタが決定された時点で決定的な値を毎回関数内部で計算するのはロスである
-cached系の関数は、これらの決定的な値を引数として受け取ることで計算を減らす

これらの関数はdefun-with-cached-valuesなるマクロで定義されている
-cached系関数は、distribution objectを用いた抽象化インターフェイスの内部で利用される（予定）

また、ラッパのコンパイラマクロは、渡された引数が変数でなく値だったならば、-cachedが利用できれば置き換える
内部で他の分布乱数を呼んでいる関数は、この機構を既に利用しているので、ラッパを置き換えるだけで依存している他の関数も変更されることになる
